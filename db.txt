
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    full_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    about_me TEXT,
    birth_date DATE,
    gender VARCHAR(50),
    address TEXT,
    emergency_number VARCHAR(20),
    profile_img VARCHAR(255),
    hobby VARCHAR(50),
    interest VARCHAR(50),
    special_ability VARCHAR(50),
    health_condition VARCHAR(50),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX idx_user_email ON "users"(email);

CREATE TABLE hobby (
    id SERIAL PRIMARY KEY,
    hobby_name VARCHAR(100) NOT NULL
);

CREATE TABLE health_condition (
    id SERIAL PRIMARY KEY,
    health_condition VARCHAR(100) NOT NULL
);

CREATE TABLE special_ability (
    id SERIAL PRIMARY KEY,
    special_ability VARCHAR(100) NOT NULL
);

CREATE TABLE user_work_experience (
    id SERIAL PRIMARY KEY,
    user_id INT,
    job_title VARCHAR(255),
    company VARCHAR(255),
    start_date DATE,
    end_date DATE,
    description TEXT,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE jobs (
    id SERIAL PRIMARY KEY,
    job_name VARCHAR(100) NOT NULL,
    image VARCHAR(255),
    company_name VARCHAR(100) NOT NULL, 
    job_description VARCHAR(255),
    location VARCHAR(255),
    position VARCHAR(50),
    qualification VARCHAR(255),
    min_experience VARCHAR(100),
    job_type VARCHAR(50),
    salary VARCHAR(30), 
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE resume (
    id SERIAL PRIMARY KEY,
    file_size VARCHAR(50),
    file_path VARCHAR(255),
    resume_name TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE job_history (
    id SERIAL PRIMARY KEY,
    jobs_id INT,
    user_id INT,
    resume_id INT,
    status VARCHAR(50),
    applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (jobs_id) REFERENCES jobs(id),
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (resume_id) REFERENCES resume(id)
);

CREATE TABLE saved_jobs (
    id SERIAL PRIMARY KEY,
    jobs_id INT,
    user_id INT,
    FOREIGN KEY (saved_jobs) REFERENCES jobs(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS invalidated_tokens (
    token TEXT PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    invalidated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);